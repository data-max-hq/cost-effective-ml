apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  labels:
    app.kubernetes.io/name: kuberay
    helm.sh/chart: ray-cluster-0.4.0
    app.kubernetes.io/instance: raycluster
    app.kubernetes.io/managed-by: Helm
  name: raycluster-kuberay

spec:
  rayVersion: 2.3.0
  headGroupSpec:
    serviceType: ClusterIP
    rayStartParams:
      block: "true"
      dashboard-host: "0.0.0.0"
    template:
      spec:
        imagePullSecrets:
          []
        containers:
          - volumeMounts:
            - mountPath: /tmp/ray
              name: log-volume
            name: ray-head
            image: us-central1-docker.pkg.dev/sustained-drake-368613/cost-efficient-ml/ray-server:2.3.0-py38
            imagePullPolicy: IfNotPresent
            resources:
              limits:
                cpu: "1"
                memory: 2G
              requests:
                cpu: "1"
                memory: 2G
            securityContext:
              {}
            env:
              []
        volumes:
          - emptyDir: {}
            name: log-volume
        affinity:
          {}
        tolerations:
          []
        nodeSelector:
          {}
      metadata:
        annotations:
          {}
        labels:
          app.kubernetes.io/name: kuberay
          helm.sh/chart: ray-cluster-0.4.0
          app.kubernetes.io/instance: raycluster
          app.kubernetes.io/managed-by: Helm

  workerGroupSpecs:
    - rayStartParams:
        block: "true"
      replicas: 1
      minReplicas: 1
      maxReplicas: 2
      groupName: cpugroup
      template:
        spec:
          imagePullSecrets:
            [ ]
          initContainers:
            - name: init
              image: busybox:1.28
              command: [ 'sh', '-c', "until nslookup $RAY_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for K8s Service $RAY_IP; sleep 2; done" ]
              securityContext:
                { }
          containers:
            - volumeMounts:
                - mountPath: /tmp/ray
                  name: log-volume
              name: ray-worker
              image: us-central1-docker.pkg.dev/sustained-drake-368613/cost-efficient-ml/ray-server:2.3.0-py38
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: "1"
                  memory: 1G
                requests:
                  cpu: "1"
                  memory: 1G
              securityContext:
                { }
              env:
                [ ]
              ports:
                null
          volumes:
            - emptyDir: { }
              name: log-volume
          affinity:
            { }
          tolerations:
            [ ]
          nodeSelector:
            cpu: "true"
        metadata:
          annotations:
            key: value
          labels:
            app.kubernetes.io/name: kuberay
            helm.sh/chart: ray-cluster-0.4.0
            app.kubernetes.io/instance: raycluster
            app.kubernetes.io/managed-by: Helm
    - rayStartParams:
        block: "true"
        #num-gpus: "1"
      replicas: 1
      minReplicas: 1
      maxReplicas: 3
      groupName: gpugroup
      template:
        spec:
          imagePullSecrets:
            []
          initContainers:
            - name: init
              image: busybox:1.28
              command: ['sh', '-c', "until nslookup $RAY_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for K8s Service $RAY_IP; sleep 2; done"]
              securityContext:
                {}
          containers:
            - volumeMounts:
              - mountPath: /tmp/ray
                name: log-volume
              name: ray-worker
              image: us-central1-docker.pkg.dev/sustained-drake-368613/cost-efficient-ml/ray-server:2.3.0-py38
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: "1"
                  memory: 1G
                requests:
                  cpu: "1"
                  memory: 1G
              securityContext:
                {}
              env:
                []
              ports:
                null
          volumes:
            - emptyDir: {}
              name: log-volume
          affinity:
            {}
          tolerations:
            []
          nodeSelector:
            gpu: "true"
        metadata:
          annotations:
            key: value
          labels:
            app.kubernetes.io/name: kuberay
            helm.sh/chart: ray-cluster-0.4.0
            app.kubernetes.io/instance: raycluster
            app.kubernetes.io/managed-by: Helm